{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","a","nodeType","previous","b","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.e3df8816.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    //增\r\n    create(string){ //创建节点\r\n        const container =document.createElement(\"template\"); //template里面可以容纳任意元素，不会在页面中显示，不要用div（因为里面不能直接含td标签）\r\n        container.innerHTML = string.trim();//trim去除字符串两边的文本元素（空格）\r\n        return container.content.firstChild;//template不能直接通过children[0]获取到儿子\r\n    },\r\n    after(node, node2){ //新增弟弟\r\n        node.parentNode.insertBefore(node2, node.nextSibling)\r\n        //找到node的爸爸调用insertBefore方法，把node2插到node下个节点前面\r\n    },\r\n    before(node,node2){ //新增哥哥\r\n        node.parentNode.insertBefore(node2, node)\r\n    },\r\n    append(parent,node){ //新增儿子\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node,parent){ //新增爸爸\r\n        dom.before(node,parent) //先把爸爸放在节点前面（兄弟关系）\r\n        dom.append(parent,node) //然后把节点变成爸爸儿子\r\n    },\r\n\r\n    //删\r\n    remove(node){ //删除节点\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node){ //删除后代\r\n        const {childNodes} = node // const childNodes =node.childNodes的缩写\r\n        const array =[]\r\n        let x =node.firstChild\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n\r\n    //改\r\n    attr(node, name, value){ //读写属性 【重载】\r\n        if(arguments.length === 3){ //写\r\n            node.setAttribute(name, value)\r\n        }else if(arguments.length === 2){ //读\r\n           return node.getAttribute(name)    \r\n        }\r\n    },\r\n    text(node,string){ //读写文本内容【适配】\r\n        if(arguments.length === 2){ //写\r\n            if('innerText' in node){\r\n                node.innerText = string //ie 旧的IE只支持这种\r\n            }else{\r\n                node.textContent = string //firefox、Chrome\r\n            } \r\n        }else if(arguments.length ===1){ //读\r\n            if('innerText' in node){\r\n                return node.innerText \r\n            }else{\r\n                return node.textContent\r\n            } \r\n        }\r\n    }, \r\n    html(node,string){ //读写HTML内容\r\n        if(arguments.length === 2){ //写\r\n            node.innerHTML =string\r\n        }else if(arguments.length === 1){ //读\r\n            return node.innerHTML\r\n        } \r\n    },\r\n    style(node,name,value){ //修改 style\r\n        if(arguments.length === 3){ //修改\r\n            //dom.style(div, 'color', 'red')\r\n            node.style[name] = value\r\n        }else if(arguments.length === 2){ \r\n            if(typeof name === 'string'){ //写\r\n                //dom.style(div, 'color')\r\n                return node.style[name] //读\r\n            }else if(name instanceof Object){\r\n                //dom.style(div,{color:'red'})\r\n                const object =name\r\n                for(let key in object){\r\n                node.style[key] = object[key]\r\n              }\r\n          }    \r\n       }\r\n    },\r\n    class: {  //修改class\r\n        add(node,className){ //添加\r\n            node.classList.add(className)\r\n        },\r\n        remove(node,className){ //删除\r\n            node.classList.remove(className)\r\n        },\r\n        has(node,className){ //读\r\n            return node.classList.contains(className)\r\n        },\r\n    },\r\n    on(node,eventName,fn){ //添加事件监听\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n    off(node,eventName,fn){ //删除事件监听\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n\r\n    //查\r\n    find(selector,scope){ //获取标签或标签们\r\n        return  (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node){ //获取父元素\r\n        return node.parentNode\r\n    },\r\n    children(node){ //获取子元素\r\n        return node.children\r\n    },\r\n    siblings(node){ //获取兄弟姐妹元素\r\n        return Array.from(node.parentNode.children).filter(n=>n!==node) //伪数组变成数组，然后过滤排除自己\r\n    },\r\n    next(node){ //获取弟弟\r\n        let a =node.nextSibling\r\n        while (a && a.nodeType ===3){ //剔除文本节点\r\n            a =a.nextSibling\r\n        } \r\n        return a\r\n    },\r\n    previous(node){ //获取哥哥\r\n        let b =node.previousSibling\r\n        while (b && b.nodeType ===3){ //剔除文本节点\r\n            b =b.previousSibling\r\n        } \r\n        return b\r\n    },\r\n    each(nodeList,fn){ //遍历所有节点\r\n        for(let i=0; i<nodeList.length; i++){\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node){ //获取排行老几\r\n        const list = dom.children(node.parentNode)\r\n        let i \r\n        for(i=0; i<list.length; i++){\r\n            if(list[i] === node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    },\r\n};\r\n"]}